"""
    函数定义时小括号中的参数-形式参数/形参
    函数调用时小括号中传递的参数-实际参数/实参
    传递参数时，如果位置(个数)不对应则会报错
    1.实参传递：位置实参、关键字实参、序列实参、字典实参
    序列参数需要通过*解包
    字典实参需要通过**解包
    2.形参传递：形式参数的创建分为缺省(默认)参数、位置形参、
            星号元组形参、命名关键字形参、字典形参
"""
# def fun01(a, b, c, d):
#     print(a)
#     print(b)
#     print(c)
#     print(d)
#
# # 位置实参-形参和实参按照定义和调用时位置对应关系传递
# fun01(1, 2, 3, 4)
#
# # 关键字实参-形参和实参按照定义时参数的名称传递
# fun01(d = 1, b = 2, c = 5, a = 10)
#
# # 序列实参-实参按照序列的顺序传递
# list01 = [10, 20, 30, 40]
# fun01(*list01)
#
# # 字典实参-通过字典的键值对传递
# dict01 = {'a': 100, 'b': 200, 'c': 300, 'd': 400}
# fun01(**dict01)

print("=================")
# 形参的传递

def fun02(a = 0, b = 0, c = 0, d = 0):
    print(a)
    print(b)
    print(c)
    print(d)
# 1.缺省参数/默认值参数-在定义函数时给形参设置默认值
fun02(b = 10, c = 20)

# 2.星号元组形参-在定义函数时形参前加*，表示可以接收任意多个位置实参
def fun03(*args):
    print(args)
fun03(1)
fun03(1, 5)


# 3.命名关键字形参-在定义函数时形参前加*，表示可以接收任意多个关键字实参
# 在*前面的参数按照位置传递，*后面的参数必须匹配变量名
def fun04(a, *args, b):
    print(a)
    print(args)
    print(b)
fun04(1, 2, b = 3)

# 4.字典形参
def fun05(**args):
    print(args)
fun05(a = 1, b = 2, c = 3)